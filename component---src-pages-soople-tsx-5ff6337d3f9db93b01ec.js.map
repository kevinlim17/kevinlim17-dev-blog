{"version":3,"file":"component---src-pages-soople-tsx-5ff6337d3f9db93b01ec.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/writer/WriterGround.tsx","webpack://gatsby-starter-default/./src/components/writer/GenreList.tsx","webpack://gatsby-starter-default/./src/components/writer/WritingItem.tsx","webpack://gatsby-starter-default/./src/components/writer/WritingList.tsx","webpack://gatsby-starter-default/./src/pages/soople.tsx","webpack://gatsby-starter-default/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js"],"sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport TypeWriter from 'typewriter-effect'\nimport { GradientAnimation } from 'components/lib/GradientAnimation'\nimport { keyframes } from '@emotion/react'\n\ntype WriterGroundProps = {\n  children: ReactNode\n}\n\nconst Background = styled.div`\n  z-index: 2;\n  width: 100%;\n  background: linear-gradient(\n    180deg,\n    rgba(2, 0, 36, 0.3) 0%,\n    rgba(196, 196, 196, 1) 30%,\n    rgba(250, 249, 246, 1) 100%\n  );\n  animation: ${GradientAnimation} 15s ease-out infinite;\n  background-size: 400%;\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  width: 70vw;\n  height: auto;\n  margin: 0 auto;\n\n  @media (max-width: 768px) {\n    width: 90vw;\n    padding: 0 20px;\n  }\n`\n\nconst PaperShapedAnimation = keyframes`\n  0% { margin-left: -10vh; opacity: 0; }\n  50% { margin-left: -7vh; opacity: 0;}\n  100% { margin-left: 0px; opacity: 1; }\n`\n\nconst PaperShapedWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n\n  width: 70vw;\n  height: auto;\n  padding: 3rem;\n  z-index: 2;\n  margin-top: 7.5rem;\n\n  background: rgba(250, 249, 246, 1);\n  border: 2px solid rgba(2, 0, 36, 1);\n  border-right: 2px dashed;\n  border-bottom: 0px;\n  box-shadow: 0 -4px 8px rgba(0, 0, 0, 0.1);\n\n  position: relative;\n\n  animation-name: ${PaperShapedAnimation};\n  animation-duration: 2.5s;\n\n  @media (max-width: 1200px) {\n    width: 85vw;\n    padding: 2.5rem;\n  }\n\n  @media (max-width: 768px) {\n    width: 90vw;\n    padding: 2rem;\n  }\n`\n\nconst WriterMotto = styled.div`\n  font-size: 1.8rem;\n  line-height: 1.4;\n  color: #1f2937;\n  margin-bottom: 2rem;\n\n  @media (max-width: 768px) {\n    font-size: 1.2rem;\n    margin-bottom: 1.5rem;\n  }\n`\n\nconst WriterInfo = styled.div`\n  font-size: 1.6rem;\n  font-weight: 400;\n  line-height: 1.6;\n  min-height: 8rem;\n  width: 100%;\n  color: rgba(2, 0, 36, 1);\n  padding-bottom: 1rem;\n\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    line-height: 1.7;\n    min-height: 6rem;\n    margin-bottom: 1.5rem;\n    padding-bottom: 1.5rem;\n  }\n`\n\nconst WriterGround: FunctionComponent<WriterGroundProps> = function ({\n  children,\n}) {\n  return (\n    <Background>\n      <Wrapper>\n        <PaperShapedWrapper>\n          <WriterMotto>🎯&nbsp;As a writer...</WriterMotto>\n          <WriterInfo>\n            <TypeWriter\n              options={{\n                loop: true,\n              }}\n              onInit={typewriter => {\n                typewriter\n                  .pauseFor(2000)\n                  .typeString(\n                    '앱을 개발하고, 글을 쓰며, 예술을 향유하는, <br />',\n                  )\n                  .pauseFor(1500)\n                  .typeString(\n                    '그렇게 다양한 색이 삶에 덧입혀지기를 소망하는 사람입니다.',\n                  )\n                  .deleteAll()\n                  .pauseFor(500)\n                  .typeString('컴퓨터공학을 전공으로 삼고, <br />')\n                  .pauseFor(1000)\n                  .typeString(\n                    '다양한 학문의 세계를 연결하는 데 관심이 많은 한 명의 시민으로서,',\n                  )\n                  .deleteAll()\n                  .pauseFor(500)\n                  .typeString(\n                    '과학과 예술, 공학과 사회, 글쓰기와 프로그래밍 사이의 <br />',\n                  )\n                  .pauseFor(1500)\n                  .typeString('관계성을 탐구하는 데 관심이 많습니다.')\n                  .deleteAll()\n                  .pauseFor(1000)\n                  .start()\n              }}\n            />\n          </WriterInfo>\n          {children}\n        </PaperShapedWrapper>\n      </Wrapper>\n    </Background>\n  )\n}\n\nexport default WriterGround\n","import React, { FunctionComponent, ReactNode } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ntype GenreItemProps = {\n  active: boolean\n}\n\ntype GatsbyLinkProps = {\n  children: ReactNode\n  className?: string\n  to: string\n} & GenreItemProps\n\nexport type GenreListProps = {\n  selectedGenre: string\n  genreList: {\n    [key: string]: number\n  }\n}\n\nconst GenreListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin: 0.5rem 0;\n  padding: 1rem 1rem 1rem;\n  gap: 0.5rem;\n  border-top: 2px solid rgba(2, 0, 36, 1);\n  border-left: 2px solid rgba(2, 0, 36, 1);\n\n  @media (max-width: 768px) {\n    gap: 0.5rem;\n    margin: 0.75rem 0;\n    // padding: 0 0 1.5rem 0;\n  }\n`\n\nconst WrapperTitle = styled.div`\n  font-size: 18px;\n  font-family: 'NanumSquareNeoBold';\n  margin-right: 100%;\n  margin-bottom: 1rem;\n  color: rgba(2, 0, 36, 1);\n`\n\n// TableShapeContainer와 동일한 색상 배열 사용\nconst tagColors = [\n  '#00bcd4', // 청록색\n  '#607d8b', // 블루그레이\n  '#00796b', // 진한 청록색\n  '#e91e63', // 핑크\n  '#ff9800', // 오렌지\n  '#4caf50', // 녹색\n]\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst GenreItem = styled(({ active, ...props }: GatsbyLinkProps) => (\n  <Link {...props} />\n))`\n  /** Box Properties */\n  background-color: ${({ active, children }) => {\n    if (active) return 'rgba(2, 0, 36, 1)'\n    // children에서 장르 이름을 추출하여 색상 결정\n    const genreName =\n      typeof children === 'string' ? children : children?.toString() || ''\n    const colorIndex =\n      genreName.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0) %\n      tagColors.length\n    return tagColors[colorIndex]\n  }};\n  border-radius: 5px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  text-decoration: none;\n  display: inline-block;\n\n  /** Text Properties */\n  color: rgba(250, 249, 246, 1);\n  font-weight: ${({ active }) => (active ? '700' : '600')};\n  font-size: 0.9rem;\n  padding: 0.5rem 0.75rem;\n  line-height: 1.2;\n  box-shadow: ${({ active }) =>\n    active ? '2px 4px 0 0 rgba(2, 0, 36, 0.5);' : '0'};\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 3px 6px 0 0 rgba(196, 196, 196, 0.7);\n    color: rgba(196, 196, 196, 1);\n    font-family: 'NanumSquareNeoExtraBold';\n    margin-right: 5px;\n  }\n\n  &:active {\n    transform: translateY(0);\n  }\n\n  @media (max-width: 768px) {\n    font-size: 0.75rem;\n    padding: 0.4rem 0.6rem;\n  }\n`\n\nconst GenreList: FunctionComponent<GenreListProps> = function ({\n  selectedGenre,\n  genreList,\n}) {\n  return (\n    <GenreListWrapper>\n      <WrapperTitle>Categories</WrapperTitle>\n      {Object.entries(genreList).map(([name, count]) => (\n        <GenreItem\n          to={`/brunch_stories/?category=${name}`}\n          active={name === selectedGenre}\n          key={name}\n        >\n          {name}&nbsp;({count})\n        </GenreItem>\n      ))}\n    </GenreListWrapper>\n  )\n}\n\nexport default GenreList\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { BrunchPostItemType } from 'types/PostItem.types'\n\nconst WritingItemWrapper = styled(Link)`\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n  border-top: 1.5px solid rgba(2, 0, 36, 1);\n  border-left: 1.5px solid rgba(2, 0, 36, 1);\n  background: rgba(250, 249, 246, 1);\n  overflow: hidden;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  text-decoration: none;\n\n  margin-bottom: 1rem;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 8px 16px 0 0 rgba(2, 0, 36, 0.7);\n    background-color: rgba(2, 0, 36, 1);\n    border-color: rgba(250, 249, 246, 1);\n\n    * {\n      color: white !important;\n    }\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 30%;\n  height: auto;\n  min-height: 160px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 200px;\n  }\n`\n\nconst WritingItemContent = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 1.5rem;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    padding: 1.25rem;\n  }\n`\n\nconst ContentTop = styled.div`\n  flex: 1;\n`\n\nconst ContentBottom = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  margin-top: 1rem;\n`\n\nconst Title = styled.h3`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n\n  font-size: 1.75rem;\n  font-weight: 400;\n  color: #1f2937;\n  margin: 0 0 0.75rem 0;\n  line-height: 1.4;\n`\n\nconst Description = styled.p`\n  display: -webkit-box;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n\n  font-size: 0.95rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #6b7280;\n  border-top: 1.5px dashed rgba(196, 196, 196, 1);\n  border-bottom: 1.5px dashed rgba(196, 196, 196, 1);\n  padding: 0.6rem 0;\n  margin: 0;\n`\n\nconst MetaInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.75rem;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 0.5rem;\n  }\n`\nconst genreColors = [\n  '#00bcd4', // 청록색\n  '#607d8b', // 블루그레이\n  '#00796b', // 진한 청록색\n  '#e91e63', // 핑크\n  '#ff9800', // 오렌지\n  '#4caf50', // 녹색\n]\n\nconst Genre = styled.span<{ colorIndex: number }>`\n  padding: 0.25rem 0.75rem;\n  background: ${({ colorIndex }) =>\n    genreColors[colorIndex % genreColors.length]};\n  border-radius: 5px;\n  font-size: 0.8rem;\n  font-weight: 600;\n  color: white;\n`\n\nconst Date = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 0.25rem;\n  font-size: 0.85rem;\n  font-weight: 500;\n  color: #9ca3af;\n`\n\nconst WritingItem: FunctionComponent<BrunchPostItemType> = function ({\n  node: {\n    title,\n    description,\n    date,\n    thumbnail: {\n      childImageSharp: { gatsbyImageData },\n    },\n    genre,\n    url,\n  },\n}) {\n  const getColorIndex = (genreStr: string) => {\n    return genreStr.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0)\n  }\n\n  return (\n    <WritingItemWrapper to={url}>\n      <WritingItemContent>\n        <ContentTop>\n          <Title>{title}</Title>\n          <Description>{description}</Description>\n        </ContentTop>\n\n        <ContentBottom>\n          <MetaInfo>\n            <Genre colorIndex={getColorIndex(genre)}>{genre}</Genre>\n            <Date>🗓️ {date}</Date>\n          </MetaInfo>\n        </ContentBottom>\n      </WritingItemContent>\n      <ThumbnailImage image={gatsbyImageData} alt=\"Writing Item Image\" />\n    </WritingItemWrapper>\n  )\n}\n\nexport default WritingItem\n","import React, { FunctionComponent, useMemo } from 'react'\nimport styled from '@emotion/styled'\nimport WritingItem from './WritingItem'\nimport { BrunchPostItemType } from 'types/PostItem.types'\n\ntype WritingListProps = {\n  selectedGenre: string\n  writings: BrunchPostItemType[]\n}\n\nconst WritingListWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n  width: 100%;\n  margin: 3vh auto;\n\n  @media (max-width: 768px) {\n    margin-top: 2vh;\n  }\n`\n\nconst WritingList: FunctionComponent<WritingListProps> = function ({\n  selectedGenre,\n  writings,\n}) {\n  const writingListByGenre = useMemo<BrunchPostItemType[]>(\n    () =>\n      writings.filter(({ node: { genre } }: BrunchPostItemType) =>\n        selectedGenre !== '모든 글' ? genre === selectedGenre : true,\n      ),\n    [selectedGenre],\n  )\n\n  return (\n    <WritingListWrapper>\n      {writingListByGenre.map(({ node }: BrunchPostItemType) => (\n        <WritingItem node={node} />\n      ))}\n    </WritingListWrapper>\n  )\n}\n\nexport default WritingList\n","import React, { FunctionComponent, useMemo } from 'react'\nimport Template from 'components/common/Template'\nimport { graphql } from 'gatsby'\nimport { BrunchPostItemType } from 'types/PostItem.types'\nimport queryString, { ParsedQuery } from 'query-string'\nimport WriterGround from 'components/writer/WriterGround'\nimport GenreList, { GenreListProps } from 'components/writer/GenreList'\nimport WritingList from 'components/writer/WritingList'\n\ntype WriterSpacePageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    allWritingsJson: {\n      edges: BrunchPostItemType[]\n    }\n  }\n}\n\nconst WriterSpace: FunctionComponent<WriterSpacePageProps> = function ({\n  location: { search },\n  data: {\n    allWritingsJson: { edges },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search)\n  const selectedGenre: string =\n    typeof parsed.category !== 'string' || !parsed.category\n      ? '모든 글'\n      : parsed.category\n\n  const genreList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: GenreListProps['genreList'],\n          { node: { genre } }: BrunchPostItemType,\n        ) => {\n          if (list[genre] === undefined) list[genre] = 1\n          else list[genre]++\n\n          list['모든 글']++\n\n          return list\n        },\n        { '모든 글': 0 },\n      ),\n    [],\n  )\n\n  return (\n    <Template headerTitle=\"&nbsp;Monthly, Soople\">\n      <WriterGround>\n        <GenreList\n          selectedGenre={selectedGenre}\n          genreList={genreList}\n        ></GenreList>\n        <WritingList selectedGenre={selectedGenre} writings={edges} />\n      </WriterGround>\n    </Template>\n  )\n}\n\nexport default WriterSpace\n\nexport const getWritingList = graphql`\n  query getWritingList {\n    allWritingsJson(sort: { date: DESC }) {\n      edges {\n        node {\n          title\n          description\n          date(formatString: \"YYYY.MM.DD\")\n          thumbnail {\n            childImageSharp {\n              gatsbyImageData(width: 768, height: 400)\n            }\n          }\n          genre\n          url\n        }\n      }\n    }\n  }\n`\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["Background","GradientAnimation","Wrapper","PaperShapedAnimation","keyframes","PaperShapedWrapper","WriterMotto","WriterInfo","children","___EmotionJSX","TypeWriter","options","loop","onInit","typewriter","pauseFor","typeString","deleteAll","start","GenreListWrapper","WrapperTitle","tagColors","GenreItem","_styled","_ref","active","props","Link","_ref2","colorIndex","toString","split","reduce","acc","char","charCodeAt","length","_ref3","_ref4","selectedGenre","genreList","Object","entries","map","_ref6","name","count","to","key","WritingItemWrapper","ThumbnailImage","GatsbyImage","WritingItemContent","ContentTop","ContentBottom","Title","Description","MetaInfo","genreColors","Genre","Date","node","title","description","date","thumbnail","childImageSharp","gatsbyImageData","genre","url","genreStr","image","alt","WritingListWrapper","writings","writingListByGenre","useMemo","filter","WritingItem","location","search","data","allWritingsJson","edges","parsed","queryString","parse","category","list","undefined","Template","headerTitle","WriterGround","GenreList","WritingList","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","join","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","value","strictUriEncode","encodeURIComponent","x","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}